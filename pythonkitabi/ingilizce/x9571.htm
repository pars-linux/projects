

  
  <table border="0" cellspacing="0" cellpadding="3" width="100%"><tr><td>
    <div align="center" id="bldcontent">
      <a href="http://www.opendocspublishing.com/"><img src="../images/opendocs.png" width="63" height="76" border="0"></a>
      <br>
      <div class="symbol">Your OpenSource Publisher&#153;</div>
    </div>
    
  </td></tr></table>
  
  <div align="center" class="author">
      	<a href="../products.lxp.html">Products</a>
	&nbsp;|&nbsp;
	<a href="../wheretobuy.lxp.html">Where to buy</a>
	&nbsp;|&nbsp;
	<a href="../bookstore.lxp.html">Retailers</a>
	&nbsp;|&nbsp;
	<a href="../FAQ.lxp.html">FAQ</a>
	&nbsp;|&nbsp;
        <a href="../writeforus.lxp.html">Write for Us.</a>
        &nbsp;|&nbsp;
        <a href="x9571.htm#contact">Contact Us.</a>
  </div>
    <table border="0" cellspacing="3" cellpadding="0" width="100%"><tr><td width="100%">
      <div class="content">
        <table border="0" cellspacing="2" cellpadding="0" width="100%"><tr><td width="100%">
          <div align="center">
<H4 CLASS="AUTHOR"><A NAME="AEN5">Boudewijn Rempt</A>
<br>
<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0970033044/q4/103-9966647-8957454?v=glance&s=books">
<img src="ODPyQT125.png">
</a>
<br>
ISBN: 0-97003300-4-4
<br>
<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0970033044/q4/103-9966647-8957454?v=glance&s=books">
Available from bookstores everywhere or you can order it here.
</a>
<p>
You can download the source files for the book <a href="pyqtsrc.tgz">(code / eps) here.</a>
<hr>
</div>

          
          <HTML
><HEAD
><TITLE
>Accepted C++ / Qt constructs</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.72
"><LINK
REL="HOME"
TITLE="GUI Programming with Python: QT Edition"
HREF="book1.htm"><LINK
REL="UP"
TITLE="First Steps with Sip"
HREF="a8834.htm"><LINK
REL="PREVIOUS"
TITLE="Directives"
HREF="x9236.htm"><LINK
REL="NEXT"
TITLE="SIPLIB Functions"
HREF="x9684.htm"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>GUI Programming with Python: QT Edition</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A accesskey="P" href="x9236.htm">Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Appendix C. First Steps with Sip</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A accesskey="N" href="x9684.htm">Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
>Accepted C++ / Qt constructs</A
></H1
><P
>The following constructs can be handled by
      <B
CLASS="COMMAND"
>sip</B
>: typedef, struct, class, public,
      protected, private, signals, slots, virtual, const, static,
      void, bool, char, short, unsigned, int, long, float, double and
      enum. There are some restrictions:</P
><DIV
CLASS="GLOSSLIST"
><DL
><DT
><B
>class</B
></DT
><DD
><P
><P
></P
><UL
COMPACT="COMPACT"
><LI
><SPAN
> Class definition can not be
                    nested. </SPAN
></LI
><LI
><SPAN
> A class must not have private
                    abstract functions. </SPAN
></LI
><LI
><SPAN
> Constructor must be in the public,
                    private or protected sections.
                  </SPAN
></LI
><LI
><SPAN
> Function must be in the public,
                    private, protected, slot or signal sections.
                  </SPAN
></LI
><LI
><SPAN
> Class variables must be in the
                    public section. </SPAN
></LI
><LI
><SPAN
> Class enums must be in the public
                    or protected sections.
                  </SPAN
></LI
></UL
></P
></A
><BLOCKQUOTE
CLASS="BLOCKQUOTE"
><P
><B
>Member functions</B
></P
><P
>                Static functions must be public and cannot be virtual.
              </P
><P
>                The syntax of class method declarations is as follows:
              </P
><P
>                </A
><BLOCKQUOTE
CLASS="BLOCKQUOTE"
><P
>                    <TT
CLASS="REPLACEABLE"
><I
>name</I
></TT
>
                    ([<TT
CLASS="REPLACEABLE"
><I
>arg</I
></TT
>]..) [const] [=0]
                    [/<TT
CLASS="REPLACEABLE"
><I
>optflag</I
></TT
>[,<TT
CLASS="REPLACEABLE"
><I
>optflag</I
></TT
>]../] 
                    ; [<TT
CLASS="REPLACEABLE"
><I
>member_code</I
></TT
>]
                  </P
></BLOCKQUOTE
>
              </P
><P
> Option flags can be
                given in a comma separated list of
                <TT
CLASS="REPLACEABLE"
><I
>optflag</I
></TT
>s enclosed in
                slashes. <TT
CLASS="REPLACEABLE"
><I
>optflag</I
></TT
>s can be
                boolean, or take a value. The following flags are
                recognized: </P
><DIV
CLASS="TABLE"
></A
><P
><B
>Table C-4. Flags in member function declaration</B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>PyName=<TT
CLASS="REPLACEABLE"
><I
>py_name</I
></TT
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Use <TT
CLASS="REPLACEABLE"
><I
>py_name</I
></TT
>
                        instead of the C++ function name</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ReleaseLock</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Release the python interpreter
                        lock</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>PreHook=<TT
CLASS="REPLACEABLE"
><I
>hook_function</I
></TT
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Define
                        <TT
CLASS="REPLACEABLE"
><I
>hook_function</I
></TT
> to be
                        called prior to the memberfunc</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>PostHook=<TT
CLASS="REPLACEABLE"
><I
>hook_function</I
></TT
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Define
                        <TT
CLASS="REPLACEABLE"
><I
>hook_function</I
></TT
> to be
                        called after the memberfunc</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Transfer</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Ownership is transferred</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>TransferThis</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Ownership of this is transferred</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>TransferBack</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Ownership is transferred back</TD
></TR
></TBODY
></TABLE
></DIV
></BLOCKQUOTE
></DD
><DT
><B
>protected</B
></DT
><DD
><P
>              If the function is protected, call the public wrapper.
              Otherwise, explicitly call the real function and not any
              version in the wrapper class (in case it is virtual).
              This will prevent virtual loops.  You don't need to
              worry about indirected objects for protected functions.
            </P
></DD
><DT
><B
>signals</B
></DT
><DD
><P
></P
><UL
COMPACT="COMPACT"
><LI
><SPAN
> Arguments must be simple. Otherwise
                  you have to supply your own C++ code.
                </SPAN
></LI
><LI
><SPAN
> Virtual signals are not supported.
                </SPAN
></LI
></UL
></DD
><DT
><B
>slots</B
></DT
><DD
><P
></P
><UL
COMPACT="COMPACT"
><LI
><SPAN
> Arguments must be simple. Otherwise
                  you have to supply your own C++ code.
                </SPAN
></LI
></UL
></DD
><DT
><B
>virtual</B
></DT
><DD
><P
></P
><UL
COMPACT="COMPACT"
><LI
><SPAN
> Static functions cannot be virtual.
                </SPAN
></LI
><LI
><SPAN
> Virtual signals aren't supported.
                </SPAN
></LI
><LI
><SPAN
> Arguments must be simple. Otherwise
                  you have to supply your own C++ code.
                </SPAN
></LI
></UL
></DD
><DT
><B
>const</B
></DT
><DD
><P
></P
><UL
COMPACT="COMPACT"
><LI
><SPAN
> Accepted for const function
                  arguments and const functions.
                </SPAN
></LI
></UL
></DD
><DT
><B
>static</B
></DT
><DD
><P
></P
><UL
COMPACT="COMPACT"
><LI
><SPAN
> <SPAN
CLASS="ACTION"
>%VariableCode</SPAN
> cannot be specified for non-static class variables. </SPAN
></LI
><LI
><SPAN
> Cannot mix static and non-static
                  member functions with the same Python name.
                </SPAN
></LI
><LI
><SPAN
> Static functions must be public and
                  cannot be virtual. </SPAN
></LI
></UL
></DD
></DL
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A accesskey="P" href="x9236.htm">Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A accesskey="H" href="book1.htm">Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A accesskey="N" href="x9684.htm">Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Directives</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A accesskey="U" href="a8834.htm">Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>SIPLIB Functions</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
      </td>
      </tr>
      </table>
      </td>
    </tr>
  </table>
  
    
