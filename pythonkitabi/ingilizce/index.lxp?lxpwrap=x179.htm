

  
  <table border="0" cellspacing="0" cellpadding="3" width="100%"><tr><td>
    <div align="center" id="bldcontent">
      <a href="http://www.opendocspublishing.com/"><img src="../images/opendocs.png" width="63" height="76" border="0"></a>
      <br>
      <div class="symbol">Your OpenSource Publisher&#153;</div>
    </div>
    
  </td></tr></table>
  
  <div align="center" class="author">
      	<a href="../products.lxp.html">Products</a>
	&nbsp;|&nbsp;
	<a href="../wheretobuy.lxp.html">Where to buy</a>
	&nbsp;|&nbsp;
	<a href="../bookstore.lxp.html">Retailers</a>
	&nbsp;|&nbsp;
	<a href="../FAQ.lxp.html">FAQ</a>
	&nbsp;|&nbsp;
        <a href="../writeforus.lxp.html">Write for Us.</a>
        &nbsp;|&nbsp;
        <a href="index.lxp%3Flxpwrap=x179.htm#contact">Contact Us.</a>
  </div>
    <table border="0" cellspacing="3" cellpadding="0" width="100%"><tr><td width="100%">
      <div class="content">
        <table border="0" cellspacing="2" cellpadding="0" width="100%"><tr><td width="100%">
          <div align="center">
<H4 CLASS="AUTHOR"><A NAME="AEN5">Boudewijn Rempt</A>
<br>
<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0970033044/q4/103-9966647-8957454?v=glance&s=books">
<img src="ODPyQT125.png">
</a>
<br>
ISBN: 0-97003300-4-4
<br>
<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0970033044/q4/103-9966647-8957454?v=glance&s=books">
Available from bookstores everywhere or you can order it here.
</a>
<p>
You can download the source files for the book <a href="pyqtsrc.tgz">(code / eps) here.</a>
<hr>
</div>

          
          <HTML
><HEAD
><TITLE
>GUI programming with Python</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.72
"><LINK
REL="HOME"
TITLE="GUI Programming with Python: QT Edition"
HREF="book1.htm"><LINK
REL="UP"
TITLE="Introduction"
HREF="c88.htm"><LINK
REL="PREVIOUS"
TITLE="Introduction"
HREF="c88.htm"><LINK
REL="NEXT"
TITLE="About the BlackAdder IDE"
HREF="x258.htm"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>GUI Programming with Python: QT Edition</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A accesskey="P" href="index.lxp%3Flxpwrap=c88.htm">Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Chapter 1. Introduction</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A accesskey="N" href="index.lxp%3Flxpwrap=x258.htm">Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
>GUI programming with Python</A
></H1
><P
>One area where you
      <SPAN
><I
CLASS="EMPHASIS"
>do</I
></SPAN
> want the snappiest response possible is
      your user interface. Users are notoriously impatient creatures,
      and they are right. Responsiveness is important. Likewise,
      conformance to platform standards is important, as is a well
      thought-out programming model, to make <SPAN
><I
CLASS="EMPHASIS"
>your</I
></SPAN
>
      life easier. You want to have as little GUI code to as possible,
      because that means that there are less opportunities for bugs.
      With these criteria, we can set out to select a good GUI
      toolkit.</P
><P
>That it is possible at all to
      <SPAN
><I
CLASS="EMPHASIS"
>select</I
></SPAN
> a GUI toolkit might come as a bit of
      a surprise to Visual Basic developers, who cannot choose, but
      have to use whatever Microsoft provides. There is a cornucopia
      of GUI toolkits available for Unix/X11. Because Python is so
      easily extensible with  C and C++ modules, a large part of them
      is usable, &#8216;bound to' is the technical term, from Python. Quite
      a few of those toolkits are available on Windows too. Because
      all computer intensive drawing and interaction code runs in
      native machine code, outside the Python virtual machine, the
      interface can be as responsive as the interface of an
      application written in C or C++.</P
><P
>The following GUI toolkits exist for Python:</P
><DIV
CLASS="TABLE"
></A
><P
><B
>Table 1-1. GUI Toolkits for Python</B
></P
><TABLE
BORDER="1"
WIDTH="100%"
CLASS="CALSTABLE"
><THEAD
><TR
><TH
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Gui Toolkit</TH
><TH
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Windows</TH
><TH
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Unix/X11</TH
><TH
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>MacOS</TH
><TH
WIDTH="100%"
ALIGN="LEFT"
VALIGN="TOP"
>Notes</TH
></TR
></THEAD
><TBODY
><TR
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Tkinter</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes, mostly</TD
><TD
WIDTH="100%"
ALIGN="LEFT"
VALIGN="TOP"
>Tkinter is the most ancient Python GUI toolkit. It
              is based on tcl/tk, and has neither the real platform UI
              look and feel, nor a real Python programming style. A
              good resource is John Grayson's book, Python and Tkinter
              programming.</TD
></TR
><TR
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>PyQt</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>OS X only</TD
><TD
WIDTH="100%"
ALIGN="LEFT"
VALIGN="TOP"
>PyQt is based on Qt, the cross-platform GUI toolkit
              by Troll Tech. It's also, not so coincidentally, the
              subject of this book.</TD
></TR
><TR
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>wxPython</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>No</TD
><TD
WIDTH="100%"
ALIGN="LEFT"
VALIGN="TOP"
>wxPython is based on the wxWindows toolkit.
              wxWindows is a crossplatform wrapper around a native
              toolkit of each platform: the standard Win32 controls on
              Windows and GTK on Unix/X11.</TD
></TR
><TR
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>FxPy</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>No</TD
><TD
WIDTH="100%"
ALIGN="LEFT"
VALIGN="TOP"
>One of the smaller - in terms of user base -
              toolkits, it is based on the FOX toolkit. FxPy's main
              feature is execution speed.</TD
></TR
><TR
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>PyGTK (+PyGnome)</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes (a bit)</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>(If you run a separate X Server on OS X)</TD
><TD
WIDTH="100%"
ALIGN="LEFT"
VALIGN="TOP"
>PyGTK is based on GTK (formerly known as the Gimp
              Toolkit). Not really intended for cross-platform work,
              it has recently been ported (more or less) to Windows.
            </TD
></TR
><TR
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Pythonwin</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>Yes</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>No</TD
><TD
WIDTH="50"
ALIGN="LEFT"
VALIGN="TOP"
>No</TD
><TD
WIDTH="100%"
ALIGN="LEFT"
VALIGN="TOP"
>Pythonwin is the - rather underdocumented - binding
              to Microsofts MFC library. It's not portable, of
              course.</TD
></TR
></TBODY
></TABLE
></DIV
><P
>There are many others GUI toolkits
      available, both dead and alive. For a complete listing, please
      see Cameron Laird's notes on Python GUI's at:
      http://starbase.neosoft.com/~claird/comp.lang.python/python_GUI.html. 
      However, the really serious options for someone selecting a
      toolkit are Tkinter, PyQt and wxPython. I have selected PyQt for
      my own use, based on criteria of performance, programming model,
      completeness of the assortment of widgets and ease of
      installation. Oh, and because it was the most fun to use, of
      course!</P
><P
>There were other considerations, of
      course. Tkinter is often very slow - try running the IDLE IDE
      that comes with Python. In contrast, PyQt is very snappy. The
      Tcl-tk programming model that Tkinter is based on doesn't
      translate as well to Python as the modified C++ programming
      model of PyQt. PyQt has also been very well designed: I just
      love the signal/slot mechanism of PyQt. There is also just about
      every type of widget I need, and PyQt is easy to install.
      WxPython, because it's a library (wxPython) based on a library
      (wxWindows) based on a library (MFC or GTK) can be really
      difficult to get up and running. Finally, the GUI designer in
      BlackAdder (or the free equivalent Qt Designer) is a strong
      point in favor of Qt, too.</P
><P
>The most important features of PyQt are:</P
><P
>    <P
></P
><UL
><LI
><P
>Based on Trolltechs C++ Qt
            toolkit.</P
></LI
><LI
><P
>Runs on Windows and
            Unix/X11 (and soon on Apple's OS X)</P
></LI
><LI
><P
>Uses the innovative
            signals/slots paradigm to couple GUI items and
            actions.</P
></LI
><LI
><P
>Binds almost the complete
            Qt library</P
></LI
><LI
><P
>Allows subclassing of Qt
            classes in Python</P
></LI
><LI
><P
>Allows applications to
            mimic the look and feel of Windows, Motif, CDE, SGI and
            MacOS 9, or take on a custom look and feel.</P
></LI
><LI
><P
>Comes with an enormous
            inventory of advanced GUI controls, such as a canvas, an
            editable table module and a rich text editor (in version
            3.0).</P
></LI
></UL
>
    </P
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A accesskey="P" href="index.lxp%3Flxpwrap=c88.htm">Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A accesskey="H" href="index.lxp%3Flxpwrap=book1.htm">Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A accesskey="N" href="index.lxp%3Flxpwrap=x258.htm">Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Introduction</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A accesskey="U" href="index.lxp%3Flxpwrap=c88.htm">Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>About the BlackAdder IDE</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
      </td>
      </tr>
      </table>
      </td>
    </tr>
  </table>
  
    
