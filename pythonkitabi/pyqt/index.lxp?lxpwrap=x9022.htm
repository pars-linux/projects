

  
  <table border="0" cellspacing="0" cellpadding="3" width="100%"><tr><td>
    <div align="center" id="bldcontent">
      <a href="http://www.opendocspublishing.com/"><img src="../images/opendocs.png" width="63" height="76" border="0"></a>
      <br>
      <div class="symbol">Your OpenSource Publisher&#153;</div>
    </div>
    
  </td></tr></table>
  
  <div align="center" class="author">
      	<a href="../products.lxp.html">Products</a>
	&nbsp;|&nbsp;
	<a href="../wheretobuy.lxp.html">Where to buy</a>
	&nbsp;|&nbsp;
	<a href="../bookstore.lxp.html">Retailers</a>
	&nbsp;|&nbsp;
	<a href="../FAQ.lxp.html">FAQ</a>
	&nbsp;|&nbsp;
        <a href="../writeforus.lxp.html">Write for Us.</a>
        &nbsp;|&nbsp;
        <a href="index.lxp%3Flxpwrap=x9022.htm#contact">Contact Us.</a>
  </div>
    <table border="0" cellspacing="3" cellpadding="0" width="100%"><tr><td width="100%">
      <div class="content">
        <table border="0" cellspacing="2" cellpadding="0" width="100%"><tr><td width="100%">
          <div align="center">
<H4 CLASS="AUTHOR"><A NAME="AEN5">Boudewijn Rempt</A>
<br>
<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0970033044/q4/103-9966647-8957454?v=glance&s=books">
<img src="ODPyQT125.png">
</a>
<br>
ISBN: 0-97003300-4-4
<br>
<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0970033044/q4/103-9966647-8957454?v=glance&s=books">
Available from bookstores everywhere or you can order it here.
</a>
<p>
You can download the source files for the book <a href="pyqtsrc.tgz">(code / eps) here.</a>
<hr>
</div>

          
          <HTML
><HEAD
><TITLE
>Sip usage and syntax</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.72
"><LINK
REL="HOME"
TITLE="GUI Programming with Python: QT Edition"
HREF="book1.htm"><LINK
REL="UP"
TITLE="First Steps with Sip"
HREF="a8834.htm"><LINK
REL="PREVIOUS"
TITLE="Where to look to start writing your own
    wrappers/bindings"
HREF="x9012.htm"><LINK
REL="NEXT"
TITLE="Directives"
HREF="x9236.htm"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>GUI Programming with Python: QT Edition</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A accesskey="P" href="index.lxp%3Flxpwrap=x9012.htm">Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Appendix C. First Steps with Sip</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A accesskey="N" href="index.lxp%3Flxpwrap=x9236.htm">Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
>Sip usage and syntax</A
></H1
><FONT
COLOR="RED"
>      Wilken Boie

    </FONT
><P
>This section has been prepared from the sip
      manual written by Wilken Boie, who has graciously given
      permission to use it in this book.</P
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
>Usage</A
></H2
><DIV
CLASS="SECT3"
><H3
CLASS="SECT3"
>Invocation, Command Line</A
></H3
><P
><B
CLASS="COMMAND"
>sip</B
>  [-h] [-V] [-c <TT
CLASS="REPLACEABLE"
><I
>dir</I
></TT
>] [-d <TT
CLASS="REPLACEABLE"
><I
>file</I
></TT
>] [-m <TT
CLASS="REPLACEABLE"
><I
>file</I
></TT
>] [-I <TT
CLASS="REPLACEABLE"
><I
>dir</I
></TT
>] [-s <TT
CLASS="REPLACEABLE"
><I
>suffix</I
></TT
>] [-p <TT
CLASS="REPLACEABLE"
><I
>module</I
></TT
>] [<TT
CLASS="REPLACEABLE"
><I
>file</I
></TT
>]</P
><P
>          where:
          </A
><BLOCKQUOTE
CLASS="BLOCKQUOTE"
><DIV
CLASS="TABLE"
></A
><P
><B
>Table C-2. Command line options</B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>-h</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>display help message</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>-V</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>display the SIP version
                      number</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>-c
                      <TT
CLASS="REPLACEABLE"
><I
>dir</I
></TT
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>the name of the code directory [default not
                      generated]</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>-d <TT
CLASS="REPLACEABLE"
><I
>file</I
></TT
>
                    </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>the name of the documentation file [default
                      not generated]</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>-m <TT
CLASS="REPLACEABLE"
><I
>file</I
></TT
>
                    </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>the name of the Makefile [default none
                      generated]</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>-I <TT
CLASS="REPLACEABLE"
><I
>dir</I
></TT
>
                    </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>look in this directory when including
                      files</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>-s
                      <TT
CLASS="REPLACEABLE"
><I
>suffix</I
></TT
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>the suffix to use for C++ source files
                      [default ".cpp"]</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>-p
                      <TT
CLASS="REPLACEABLE"
><I
>module</I
></TT
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>the name of the generated C++ module
                      [default Module]</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>file</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>the name of the specification file [default
                      stdin]</TD
></TR
></TBODY
></TABLE
></DIV
></BLOCKQUOTE
>
        </P
></DIV
><DIV
CLASS="SECT3"
><H3
CLASS="SECT3"
>Limitations</A
></H3
><P
>          The following limitations are SIP compile time options:
          <P
></P
><UL
COMPACT="COMPACT"
><LI
><P
>Maximum number of
                arguments to a function: 20</P
></LI
><LI
><P
>Maximum nesting depth of
                <SPAN
CLASS="ACTION"
>%If</SPAN
> directives:
                10</P
></LI
><LI
><P
>Maximum number of nested
                version qualifiers in the generated Python:
                10</P
></LI
><LI
><P
>Maximum number of option
                flags in function declarations: 5</P
></LI
></UL
>
        </P
></DIV
><DIV
CLASS="SECT3"
><H3
CLASS="SECT3"
>Files</A
></H3
><DIV
CLASS="SECT4"
><H4
CLASS="SECT4"
>Source Files</A
></H4
></A
><BLOCKQUOTE
CLASS="BLOCKQUOTE"
><DIV
CLASS="GLOSSLIST"
><DL
><DT
><B
>                  <TT
CLASS="FILENAME"
>*.sip</TT
>
                </B
></DT
><DD
><P
>                    and possibly further included files are processed
                    by SIP. They are the source file(s) defining the
                    wrapping. They closely resemble the header files
                    they describe but also contain additional <A href="index.lxp%3Flxpwrap=x9236.htm">directives</A
> for a range of special cases and purposes (e.g. production of documentation, treatment of different versions a wrapped libraries).
                  </P
></DD
></DL
></DIV
></BLOCKQUOTE
></DIV
><DIV
CLASS="SECT4"
><H4
CLASS="SECT4"
>Files containing the wrapping</A
></H4
></A
><BLOCKQUOTE
CLASS="BLOCKQUOTE"
><DIV
CLASS="GLOSSLIST"
><DL
><DT
><B
>                  </A
>
                  <TT
CLASS="FILENAME"
>$(module).py</TT
>
                </B
></DT
><DD
><P
>is produced by SIP. It
                    initializes the wrapping and imports the dynamic
                    lib lib$(module)c.pyd which contains the actual
                    C++ wrapping code.</P
><P
>Code from <SPAN
CLASS="ACTION"
>%PrePythonCode</SPAN
> and <SPAN
CLASS="ACTION"
>%PythonCode</SPAN
> sections is also placed in this file as in the following example (assuming a module MOD wrapping classes A and B):</P
><PRE
CLASS="SCREEN"
> 
# Python wrapper code 
# Copying: Copyright (c) .... 
import libMODc libMc.sipInitModule() 

# here comes code from %PrePythonCode sections 

class  A: 
... 
class B: 
... 
libMc.sipRegisterClasses() 
# here comes code from %PythonCode sections
                  </PRE
></DD
><DT
><B
>                  <TT
CLASS="FILENAME"
>lib$(module)c.pyd</TT
>
                </B
></DT
><DD
><P
>This dynamic library is
                    compiled from the following, SIP generate
                    intermediate files:</P
></DD
></DL
></DIV
></BLOCKQUOTE
></DIV
><DIV
CLASS="SECT4"
><H4
CLASS="SECT4"
>Intermediate Files</A
></H4
></A
><BLOCKQUOTE
CLASS="BLOCKQUOTE"
><DIV
CLASS="GLOSSLIST"
><DL
><DT
><B
>                  <TT
CLASS="FILENAME"
>sip$(module)$(class).h</TT
>,
                  <TT
CLASS="FILENAME"
>sip$(module)$(class).cpp</TT
>
                </B
></DT
><DD
><P
>A pair of corresponding
                    header and C++ files for each wrapped
                    class.</P
></DD
><DT
><B
>                  <TT
CLASS="FILENAME"
>sip$(module)Decl$(module).h</TT
>
                </B
></DT
><DD
><P
>                    A global module header, which (beside all im- and
                    exports) contains all <SPAN
CLASS="ACTION"
>%ExportedHeaderCode</SPAN
> and <SPAN
CLASS="ACTION"
>%HeaderCode</SPAN
> (from imported .sip files only <SPAN
CLASS="ACTION"
>%ExportedHeaderCode</SPAN
>).
                  </P
></DD
><DT
><B
>                  <TT
CLASS="FILENAME"
>$(module)cmodule.cpp</TT
>
                </B
></DT
><DD
><P
>Which contains the module
                    global and initialisation code.</P
></DD
></DL
></DIV
></BLOCKQUOTE
></DIV
><DIV
CLASS="SECT4"
><H4
CLASS="SECT4"
>Auxilliary Files</A
></H4
></A
><BLOCKQUOTE
CLASS="BLOCKQUOTE"
><DIV
CLASS="GLOSSLIST"
><DL
><DT
><B
>                  <TT
CLASS="REPLACEABLE"
><I
>makefile_name</I
></TT
>
                </B
></DT
><DD
><P
>If SIP option <SPAN
CLASS="QUOTE"
>"-m
                      <TT
CLASS="REPLACEABLE"
><I
>makefile_name</I
></TT
>"</SPAN
>
                    is given, one of a set of makefile templates
                    (defined in the SIP files) is seletected and
                    instantiated with the appropriate module and class
                    names. It is typically used to compile the
                    wrapping.</P
></DD
><DT
><B
>                  </A
>
                  <TT
CLASS="FILENAME"
>sip_helper.cpp</TT
>
                </B
></DT
><DD
><P
>All code from <SPAN
CLASS="ACTION"
>%VersionCode</SPAN
> sections will be placed in this file. Typically it is compiled into <TT
CLASS="FILENAME"
>sip_helper.exe</TT
>, which then produces <TT
CLASS="FILENAME"
>sip$(module)Version.h</TT
>. This is included in all relevant files to maintain version information for the conditional sections.</P
><P
>Why not just #include the
                    necessary file that provides the version
                    information and use the C++ test specified as part
                    of the version definition in the .sip
                    files?</P
><P
>The answer is that moc can't
                    handle C++ pre-processor commands, so the proxy
                    header file must be run through the C++
                    pre-processor beforehand. The code generated by
                    moc is then #included by the main module
                    code.</P
><P
>The net result is that the
                    header file specifying the version information is
                    #included by the main module code and
                    #included a second time - but the second time is a
                    version that has already been run through the C++
                    pre-processor and has therefore lost it's usual
                    means of protecting itself from being #included
                    twice.</P
><P
>Unless the file follows
                    certain rules (like having no function
                    definitions) it is likely to make the C++ compiler
                    complain. Therefore the solution is to use a
                    generated file that isn't going to cause
                    complaints.</P
></DD
><DT
><B
>                  <TT
CLASS="REPLACEABLE"
><I
>docfile_name</I
></TT
>
                </B
></DT
><DD
><P
>If SIP option <SPAN
CLASS="QUOTE"
>"-m
                      <TT
CLASS="REPLACEABLE"
><I
>docfile_name</I
></TT
>"</SPAN
>
                    is given, documentation records are extracted from
                    the SIP file(s) and written to
                    <TT
CLASS="REPLACEABLE"
><I
>docfile_name</I
></TT
>.</P
></DD
></DL
></DIV
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="SECT3"
><H3
CLASS="SECT3"
>.sip File Syntax</A
></H3
><DIV
CLASS="SECT4"
><H4
CLASS="SECT4"
>General rules</A
></H4
><P
>            <P
></P
><UL
COMPACT="COMPACT"
><LI
><P
>All
                  <SPAN
CLASS="ACTION"
>%keywords</SPAN
> must start at beginning
                  of line.</P
></LI
><LI
><P
>All
                  <SPAN
><I
CLASS="EMPHASIS"
>_block_</I
></SPAN
>s must be closed by a
                  matching <SPAN
CLASS="ACTION"
>%End</SPAN
>
                  directive.</P
></LI
><LI
><P
>Parameters are
                  separated by whitespace, string parameters are
                  enclosed by double quotes.</P
></LI
></UL
>
          </P
></DIV
><DIV
CLASS="SECT4"
><H4
CLASS="SECT4"
>Macros</A
></H4
><P
>A number of macros can be used in the
            .sip files (e.g. class definitions, makefile templates).
            When SIP parses the definitions, the macros are replaced
            by actual values as follows:
            </A
><BLOCKQUOTE
CLASS="BLOCKQUOTE"
><DIV
CLASS="TABLE"
></A
><P
><B
>Table C-3. Macros in Makefile Templates</B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>$$</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>a '$'
                        character</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>$C</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Class
                        name</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>$S</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Source
                        files</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>$O</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Object
                        files</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>$c</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>C++ file
                        suffix</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>$o</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Object_file_suffix</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>$m</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>C++ module
                        name</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>$P</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Percent
                        sign</TD
></TR
></TBODY
></TABLE
></DIV
></BLOCKQUOTE
>
          </P
></DIV
></DIV
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A accesskey="P" href="index.lxp%3Flxpwrap=x9012.htm">Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A accesskey="H" href="index.lxp%3Flxpwrap=book1.htm">Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A accesskey="N" href="index.lxp%3Flxpwrap=x9236.htm">Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Where to look to start writing your own
    wrappers/bindings</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A accesskey="U" href="index.lxp%3Flxpwrap=a8834.htm">Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Directives</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
      </td>
      </tr>
      </table>
      </td>
    </tr>
  </table>
  
    
