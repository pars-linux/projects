

  
  <table border="0" cellspacing="0" cellpadding="3" width="100%"><tr><td>
    <div align="center" id="bldcontent">
      <a href="http://www.opendocspublishing.com/"><img src="../images/opendocs.png" width="63" height="76" border="0"></a>
      <br>
      <div class="symbol">Your OpenSource Publisher&#153;</div>
    </div>
    
  </td></tr></table>
  
  <div align="center" class="author">
      	<a href="../products.lxp.html">Products</a>
	&nbsp;|&nbsp;
	<a href="../wheretobuy.lxp.html">Where to buy</a>
	&nbsp;|&nbsp;
	<a href="../bookstore.lxp.html">Retailers</a>
	&nbsp;|&nbsp;
	<a href="../FAQ.lxp.html">FAQ</a>
	&nbsp;|&nbsp;
        <a href="../writeforus.lxp.html">Write for Us.</a>
        &nbsp;|&nbsp;
        <a href="index.lxp%3Flxpwrap=x9684.htm#contact">Contact Us.</a>
  </div>
    <table border="0" cellspacing="3" cellpadding="0" width="100%"><tr><td width="100%">
      <div class="content">
        <table border="0" cellspacing="2" cellpadding="0" width="100%"><tr><td width="100%">
          <div align="center">
<H4 CLASS="AUTHOR"><A NAME="AEN5">Boudewijn Rempt</A>
<br>
<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0970033044/q4/103-9966647-8957454?v=glance&s=books">
<img src="ODPyQT125.png">
</a>
<br>
ISBN: 0-97003300-4-4
<br>
<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0970033044/q4/103-9966647-8957454?v=glance&s=books">
Available from bookstores everywhere or you can order it here.
</a>
<p>
You can download the source files for the book <a href="pyqtsrc.tgz">(code / eps) here.</a>
<hr>
</div>

          
          <HTML
><HEAD
><TITLE
>SIPLIB Functions</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.72
"><LINK
REL="HOME"
TITLE="GUI Programming with Python: QT Edition"
HREF="book1.htm"><LINK
REL="UP"
TITLE="First Steps with Sip"
HREF="a8834.htm"><LINK
REL="PREVIOUS"
TITLE="Accepted C++ / Qt constructs"
HREF="x9571.htm"><LINK
REL="NEXT"
TITLE="Bibliography"
HREF="b10472.htm"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>GUI Programming with Python: QT Edition</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A accesskey="P" href="index.lxp%3Flxpwrap=x9571.htm">Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Appendix C. First Steps with Sip</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A accesskey="N" href="index.lxp%3Flxpwrap=b10472.htm">Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
>SIPLIB Functions</A
></H1
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
>Public Support Functions</A
></H2
><P
>To use the
          <SPAN
CLASS="APPLICATION"
>SIPLIB</SPAN
> functions described here,
          include <TT
CLASS="FILENAME"
>sip.h</TT
>. The source of these
          functions is in <TT
CLASS="FILENAME"
>siplib.c</TT
>.</P
></DIV
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
>Information functions</A
></H2
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
><A href="index.lxp%3Flxpwrap=r9694.htm">sipGetCppPtr</A
>&nbsp;--&nbsp;Get the C/C++ pointer from a wrapper and cast
              it to the required type</DT
><DT
><A href="index.lxp%3Flxpwrap=r9718.htm">sipGetComplexCppPtr</A
>&nbsp;--&nbsp;Get the C/C++ pointer for a complex
              object</DT
><DT
><A href="index.lxp%3Flxpwrap=r9738.htm">sipGetThisWrapper</A
>&nbsp;--&nbsp;Convert a C/C++ pointer to the object that
              wraps it</DT
><DT
><A href="index.lxp%3Flxpwrap=r9763.htm">sipIsSubClassInstance</A
>&nbsp;--&nbsp;See if a Python object is an instance of a
              sub-class of a given base class</DT
></DL
></DIV
></DIV
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
>Conversions and argument parsing</A
></H2
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
><A href="index.lxp%3Flxpwrap=r9791.htm">sipParseArgs</A
>&nbsp;--&nbsp;Parse the arguments to a C/C++ function
              without any side effects</DT
><DT
><A href="index.lxp%3Flxpwrap=r9932.htm">sipConvertToCpp</A
>&nbsp;--&nbsp;Convert a Python instance of a class to a
              C/C++ object pointer</DT
><DT
><A href="index.lxp%3Flxpwrap=r9962.htm">sipMapCppToSelf</A
>&nbsp;--&nbsp;Convert a C/C++ pointer to a Python
              instance</DT
><DT
><A href="index.lxp%3Flxpwrap=r9987.htm">sipConvertToVoidPtr</A
>&nbsp;--&nbsp;A convenience function to convert a C/C++ void
              pointer from a Python object</DT
><DT
><A href="index.lxp%3Flxpwrap=r10006.htm">sipConvertFromVoidPtr</A
>&nbsp;--&nbsp;A convenience function to convert a C/C++ void
              pointer to a Python object</DT
><DT
><A href="index.lxp%3Flxpwrap=r10026.htm">sipConvertFromBool</A
>&nbsp;--&nbsp;A convenience function to convert a C/C++
              boolean to a Python object</DT
><DT
><A href="index.lxp%3Flxpwrap=r10046.htm">sipCheckNone</A
>&nbsp;--&nbsp;Check a None argument for a class pointer that
              we might dereference</DT
><DT
><A href="index.lxp%3Flxpwrap=r10076.htm">sipBadVirtualResultType</A
>&nbsp;--&nbsp;Report a Python member function with an
              unexpected return type</DT
><DT
><A href="index.lxp%3Flxpwrap=r10102.htm">sipBadSetType</A
>&nbsp;--&nbsp;Report a Python class variable with an
              unexpected type</DT
></DL
></DIV
></DIV
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
>Ressource handling</A
></H2
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
><A href="index.lxp%3Flxpwrap=r10130.htm">sipReleaseLock</A
>&nbsp;--&nbsp;Release the interpreter lock and save the
              current Python thread state</DT
><DT
><A href="index.lxp%3Flxpwrap=r10143.htm">sipAcquireLock</A
>&nbsp;--&nbsp;Acquire the interpreter lock and restore the
              Python thread state</DT
><DT
><A href="index.lxp%3Flxpwrap=r10156.htm">sipCondReleaseLock</A
>&nbsp;--&nbsp;Release the interpreter lock, if previously
              acquired, and save Python thread state</DT
><DT
><A href="index.lxp%3Flxpwrap=r10174.htm">sipCondAcquireLock</A
>&nbsp;--&nbsp;Acquire the interpreter lock, if not already
              acquired, and restore Python thread state</DT
><DT
><A href="index.lxp%3Flxpwrap=r10190.htm">sipMalloc</A
>&nbsp;--&nbsp;A Python 1.5 style memory allocator that
              supports Python 1.5 and 1.6</DT
><DT
><A href="index.lxp%3Flxpwrap=r10209.htm">sipFree</A
>&nbsp;--&nbsp;A Python 1.5 style memory de-allocator that
              supports Python 1.5 and 1.6</DT
></DL
></DIV
></DIV
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
>Calling Python</A
></H2
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
><A href="index.lxp%3Flxpwrap=r10229.htm">sipEvalMethod</A
>&nbsp;--&nbsp;Call a Python method</DT
><DT
><A href="index.lxp%3Flxpwrap=r10253.htm">sipCallHook</A
>&nbsp;--&nbsp;Call a hook</DT
></DL
></DIV
></DIV
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
>Functions specifically for
          signals/slots</A
></H2
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
><A href="index.lxp%3Flxpwrap=r10275.htm">sipEmitSignal</A
>&nbsp;--&nbsp;Emit a Python or Qt signal</DT
><DT
><A href="index.lxp%3Flxpwrap=r10304.htm">sipConvertRx</A
>&nbsp;--&nbsp;Convert a Python receiver to a Qt
              receiver</DT
><DT
><A href="index.lxp%3Flxpwrap=r10355.htm">sipConnectRx</A
>&nbsp;--&nbsp;Connect a Qt or a Python signal</DT
><DT
><A href="index.lxp%3Flxpwrap=r10390.htm">sipGetRx</A
>&nbsp;--&nbsp;Convert a valid Python signal or slot to an
              existing proxy Qt slot</DT
><DT
><A href="index.lxp%3Flxpwrap=r10434.htm">sipDisconnectRx</A
>&nbsp;--&nbsp;Disconnect a Qt or Python signal from a Python
              slot</DT
></DL
></DIV
><P
>          These functions are specific for the Qt support. They are in
          the separate files <A href="index.lxp%3Flxpwrap=..%2F..%2Fsiplib%2Fsipqt.h.html" target="_top">sipqt.h</A
> and <A href="index.lxp%3Flxpwrap=..%2F..%2Fsiplib%2Fqtlib.cpp.html" target="_top">qtlib.cpp</A
>.
        </P
></DIV
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
>Private Functions</A
></H2
><P
>The private functions, which should
          only be called by generated code, are not documented here.
          For further information see the headerfile
          <TT
CLASS="FILENAME"
>sip.h</TT
>).</P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A accesskey="P" href="index.lxp%3Flxpwrap=x9571.htm">Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A accesskey="H" href="index.lxp%3Flxpwrap=book1.htm">Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A accesskey="N" href="index.lxp%3Flxpwrap=b10472.htm">Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Accepted C++ / Qt constructs</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A accesskey="U" href="index.lxp%3Flxpwrap=a8834.htm">Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Bibliography</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
      </td>
      </tr>
      </table>
      </td>
    </tr>
  </table>
  
    
