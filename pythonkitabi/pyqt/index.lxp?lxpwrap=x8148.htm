

  
  <table border="0" cellspacing="0" cellpadding="3" width="100%"><tr><td>
    <div align="center" id="bldcontent">
      <a href="http://www.opendocspublishing.com/"><img src="../images/opendocs.png" width="63" height="76" border="0"></a>
      <br>
      <div class="symbol">Your OpenSource Publisher&#153;</div>
    </div>
    
  </td></tr></table>
  
  <div align="center" class="author">
      	<a href="../products.lxp.html">Products</a>
	&nbsp;|&nbsp;
	<a href="../wheretobuy.lxp.html">Where to buy</a>
	&nbsp;|&nbsp;
	<a href="../bookstore.lxp.html">Retailers</a>
	&nbsp;|&nbsp;
	<a href="../FAQ.lxp.html">FAQ</a>
	&nbsp;|&nbsp;
        <a href="../writeforus.lxp.html">Write for Us.</a>
        &nbsp;|&nbsp;
        <a href="index.lxp%3Flxpwrap=x8148.htm#contact">Contact Us.</a>
  </div>
    <table border="0" cellspacing="3" cellpadding="0" width="100%"><tr><td width="100%">
      <div class="content">
        <table border="0" cellspacing="2" cellpadding="0" width="100%"><tr><td width="100%">
          <div align="center">
<H4 CLASS="AUTHOR"><A NAME="AEN5">Boudewijn Rempt</A>
<br>
<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0970033044/q4/103-9966647-8957454?v=glance&s=books">
<img src="ODPyQT125.png">
</a>
<br>
ISBN: 0-97003300-4-4
<br>
<a href="http://www.amazon.com/exec/obidos/tg/detail/-/0970033044/q4/103-9966647-8957454?v=glance&s=books">
Available from bookstores everywhere or you can order it here.
</a>
<p>
You can download the source files for the book <a href="pyqtsrc.tgz">(code / eps) here.</a>
<hr>
</div>

          
          <HTML
><HEAD
><TITLE
>Putting ink to paper</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.72
"><LINK
REL="HOME"
TITLE="GUI Programming with Python: QT Edition"
HREF="book1.htm"><LINK
REL="UP"
TITLE="Printing"
HREF="c8100.htm"><LINK
REL="PREVIOUS"
TITLE="Adding printing to Kalam"
HREF="x8141.htm"><LINK
REL="NEXT"
TITLE="Conclusion"
HREF="x8207.htm"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>GUI Programming with Python: QT Edition</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A accesskey="P" href="index.lxp%3Flxpwrap=x8141.htm">Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Chapter 24. Printing</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A accesskey="N" href="index.lxp%3Flxpwrap=x8207.htm">Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
>Putting ink to paper</A
></H1
><P
>The following is a very simplistic way of
      dumping text onto paper. We merely run through all lines in the
      active view and dump them on paper. If a line is too long for
      the chosen paper-size, we'll just let it run of the paper, we
      won't implement word-wrap.</P
><PRE
CLASS="PROGRAMLISTING"
>    def slotFilePrint(self):
        margin = 10
        pageNo = 1

        if self.printer.setup(self):
            self.statusBar().message('Printing...')

            view = self.workspace.activeWindow()
            p = QPainter(self.printer)

            p.setFont(QFont("courier", 10))

            y = 0
            fm = p.fontMetrics()
            metrics = QPaintDeviceMetrics(self.printer)

            for i in range(view.numLines()):
                if margin + y &#62; metrics.height() - margin:
                    pageNo = pageNo + 1
                    self.printer.newPage()
                    y = 0

                p.drawText(margin,
                           margin + y,
                           metrics.width(),
                           fm.lineSpacing(),
                           Qt.ExpandTabs | Qt.DontClip,
                           view.textLine(i))
                y = y + fm.lineSpacing()


            self.statusBar().message('Printing completed',2000)
        else:
            self.statusBar().message('Printing aborted',2000)
    </PRE
><P
>You can see how printing text works. A <TT
CLASS="CLASSNAME"
>QPrinter</TT
>
      object is a paint device, so we create a
      <TT
CLASS="CLASSNAME"
>QPainter</TT
> for it.</P
><P
>Printing requires choosing a font. In all
      probability, the user's screen font is not suitable for
      printing. For instance, many people read text on screen in 12 or
      14 point fonts, but prefer printing with 10 point fonts. In the
      preceding code, a ten-point courier is chosen, though ideally
      you would want the choice of printing font to be part of the
      application settings.</P
><P
>Once the font is set, we can use
      <TT
CLASS="FUNCTION"
>QPainter.fontMetrics()</TT
> to retrieve the
      height that each line will take on the paper. If the top margin
      (<TT
CLASS="VARNAME"
>margin</TT
>) plus the current line position
      (<TT
CLASS="VARNAME"
>y</TT
>) is greater than the height of the page,
      it's time for a new page. The page height is retrieved with
      <TT
CLASS="FUNCTION"
>metrics.height()</TT
> which uses
      <TT
CLASS="CLASSNAME"
>QPaintDeviceMetrics</TT
> to provide this kind of
      practical information.</P
><P
>Actually printing each line is no
      different from painting text with a
      <TT
CLASS="CLASSNAME"
>QPainter</TT
> on a
      <TT
CLASS="CLASSNAME"
>QPaintDevice</TT
>. The
      <TT
CLASS="FUNCTION"
>drawText()</TT
> paints the text on the device.
      You have to compute the x and y position, width and height of
      the area covered by the text to determine where exactly the text
      is printed.</P
><P
>These are <TT
CLASS="VARNAME"
>Qt.AlignmentFlags</TT
>, so you can
      mix and match <TT
CLASS="VARNAME"
>AlignLeft</TT
>,
      <TT
CLASS="VARNAME"
>AlignRight</TT
>, <TT
CLASS="VARNAME"
>AlignHCenter</TT
>,
      <TT
CLASS="VARNAME"
>AlignTop</TT
>, <TT
CLASS="VARNAME"
>AlignBottom</TT
>,
      <TT
CLASS="VARNAME"
>AlignVCenter</TT
>, <TT
CLASS="VARNAME"
>AlignCenter</TT
>,
      <TT
CLASS="VARNAME"
>SingleLine</TT
>, <TT
CLASS="VARNAME"
>DontClip</TT
>,
      <TT
CLASS="VARNAME"
>ExpandTabs</TT
>, <TT
CLASS="VARNAME"
>ShowPrefix</TT
>,
      <TT
CLASS="VARNAME"
>WordBreak</TT
>. In this case,
      <TT
CLASS="VARNAME"
>ExpandTabs</TT
> is used to make sure any tabs in
      the text are neatly printed, and <TT
CLASS="VARNAME"
>DontClip</TT
> is
      used to prevent errors when a line is too long for the
      page.</P
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A accesskey="P" href="index.lxp%3Flxpwrap=x8141.htm">Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A accesskey="H" href="index.lxp%3Flxpwrap=book1.htm">Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A accesskey="N" href="index.lxp%3Flxpwrap=x8207.htm">Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Adding printing to Kalam</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A accesskey="U" href="index.lxp%3Flxpwrap=c8100.htm">Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Conclusion</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
      </td>
      </tr>
      </table>
      </td>
    </tr>
  </table>
  
    
