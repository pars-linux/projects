=== modified file 'Docky.CairoHelper/Docky.CairoHelper/DockySurface.cs'
--- Docky.CairoHelper/Docky.CairoHelper/DockySurface.cs 2010-12-29 15:35:31 +0000
+++ Docky.CairoHelper/Docky.CairoHelper/DockySurface.cs 2011-03-13 17:16:18 +0000
@@ -150,7 +150,7 @@
        {
            DockySurface result = new DockySurface (area.Width, area.Height, this);
            
-           Internal.Show (result.Context, 0 - area.X, 0 - area.Y);
+           Internal.Show (result.Context, -area.X, -area.Y);
            
            return result;
        }

=== modified file 'Docky.Items/Docky.Painters/PagingDockPainter.cs'
--- Docky.Items/Docky.Painters/PagingDockPainter.cs 2011-01-26 04:43:08 +0000
+++ Docky.Items/Docky.Painters/PagingDockPainter.cs 2011-03-13 17:16:18 +0000
@@ -117,7 +117,7 @@
                        ShowBuffer (surface, LastPage, offset);
                    } else {
                        ShowBuffer (surface, Page, Allocation.Width - offset);
-                       ShowBuffer (surface, LastPage, 0 - offset);
+                       ShowBuffer (surface, LastPage, -offset);
                    }
                    
                    // fade out the edges during a slide

=== modified file 'Docky/Docky/CairoHelper/DockySurface_Extensions.cs'
--- Docky/Docky/CairoHelper/DockySurface_Extensions.cs  2010-12-29 08:12:28 +0000
+++ Docky/Docky/CairoHelper/DockySurface_Extensions.cs  2011-03-13 17:16:18 +0000
@@ -44,15 +44,15 @@
            double cos, sin;
            cos = Math.Cos (rotation);
            sin = Math.Sin (rotation);
-           Matrix m = new Matrix (cos, sin, 0 - sin, cos, point.X, point.Y);
+           Matrix m = new Matrix (cos, sin, -sin, cos, point.X, point.Y);
            cr.Transform (m);
            
            if (zoom != 1)
                cr.Scale (zoom, zoom);
            
            cr.SetSource (self.Internal,
-               0 - self.Width / 2, 
-               0 - self.Height / 2);
+               -self.Width / 2, 
+               -self.Height / 2);
            
            cr.PaintWithAlpha (opacity);
            
@@ -85,7 +85,7 @@
            double cos, sin;
            cos = Math.Cos (rotation);
            sin = Math.Sin (rotation);
-           Matrix m = new Matrix (cos, sin, 0 - sin, cos, point.X, point.Y);
+           Matrix m = new Matrix (cos, sin, -sin, cos, point.X, point.Y);
            cr.Transform (m);
            
            if (zoom != 1)
@@ -97,8 +97,8 @@
                cr.Scale (1, -1);
            
            cr.SetSource (self.Internal, 
-               0 - self.Width / 2, 
-               0 - self.Height / 2);
+               -self.Width / 2, 
+               -self.Height / 2);
            
            cr.PaintWithAlpha (opacity * .3);
            

=== modified file 'Docky/Docky/Interface/DockWindow.cs'
--- Docky/Docky/Interface/DockWindow.cs 2011-03-03 08:59:59 +0000
+++ Docky/Docky/Interface/DockWindow.cs 2011-03-13 17:16:18 +0000
@@ -2749,10 +2749,10 @@
                } else {
                    switch (Position) {
                    case DockPosition.Top:
-                       cr.SetSource (main_buffer.Internal, 0, 0 - HideOffset * ZoomedDockHeight);
+                       cr.SetSource (main_buffer.Internal, 0, -HideOffset * ZoomedDockHeight);
                        break;
                    case DockPosition.Left:
-                       cr.SetSource (main_buffer.Internal, 0 - HideOffset * ZoomedDockHeight, 0);
+                       cr.SetSource (main_buffer.Internal, -HideOffset * ZoomedDockHeight, 0);
                        break;
                    case DockPosition.Right:
                        cr.SetSource (main_buffer.Internal, HideOffset * ZoomedDockHeight, 0);

=== modified file 'Docky/Docky/Menus/DockMenu.cs'
--- Docky/Docky/Menus/DockMenu.cs   2010-10-15 15:32:36 +0000
+++ Docky/Docky/Menus/DockMenu.cs   2011-03-13 17:16:18 +0000
@@ -543,15 +543,15 @@
                switch (Orientation) {
                case DockPosition.Top:
                    cr.Scale (1, -1);
-                   cr.Translate (0, 0 - background_buffer.Height);
+                   cr.Translate (0, -background_buffer.Height);
                    break;
                case DockPosition.Left:
                    cr.Rotate (Math.PI * .5);
-                   cr.Translate (0, 0 - background_buffer.Height);
+                   cr.Translate (0, -background_buffer.Height);
                    break;
                case DockPosition.Right:
                    cr.Rotate (Math.PI * -0.5);
-                   cr.Translate (0 - background_buffer.Width, 0);
+                   cr.Translate (-background_buffer.Width, 0);
                    break;
                }
                

=== modified file 'StandardPlugins/Clock/src/ClockDockItem.cs'
--- StandardPlugins/Clock/src/ClockDockItem.cs  2010-11-21 22:19:54 +0000
+++ StandardPlugins/Clock/src/ClockDockItem.cs  2011-03-13 17:16:18 +0000
@@ -388,20 +388,20 @@
            double minuteRotation = 2 * Math.PI * (DateTime.Now.Minute / 60.0) + Math.PI;
            cr.Rotate (minuteRotation);
            cr.MoveTo (0, radius - radius * .35);
-           cr.LineTo (0, 0 - radius * .15);
+           cr.LineTo (0, -radius * .15);
            cr.Stroke ();
-           cr.Rotate (0 - minuteRotation);
+           cr.Rotate (-minuteRotation);
            
            cr.Color = new Cairo.Color (0, 0, 0);
            double hourRotation = 2 * Math.PI * (DateTime.Now.Hour / (ShowMilitary ? 24.0 : 12.0)) + 
                    Math.PI + (Math.PI / (ShowMilitary ? 12.0 : 6.0)) * DateTime.Now.Minute / 60.0;
            cr.Rotate (hourRotation);
            cr.MoveTo (0, radius - radius * .5);
-           cr.LineTo (0, 0 - radius * .15);
+           cr.LineTo (0, -radius * .15);
            cr.Stroke ();
-           cr.Rotate (0 - hourRotation);
+           cr.Rotate (-hourRotation);
            
-           cr.Translate (0 - center, 0 - center);
+           cr.Translate (-center, -center);
            
            RenderFileOntoContext (cr, System.IO.Path.Combine (ThemePath, "clock-glass.svg"), radius * 2);
            RenderFileOntoContext (cr, System.IO.Path.Combine (ThemePath, "clock-frame.svg"), radius * 2);

=== modified file 'Docky/Docky/ConfigurationWindow.cs'
--- Docky/Docky/ConfigurationWindow.cs  2011-02-05 08:06:51 +0000
+++ Docky/Docky/ConfigurationWindow.cs  2011-03-15 07:48:42 +0000
@@ -94,9 +94,10 @@
            this.SetCompositeColormap ();
            Stick ();
            
-           // why 1? because Compiz sucks... thats why!
-           Move (0, 1);
-           SetSizeRequest (Screen.Width, Screen.Height - 1);
+           // make the window extend off screen in all directions
+           // to work around problems with struts
+           Move (-50, -50);
+           SetSizeRequest (Screen.Width + 100, Screen.Height + 100);
        }
        
        void HandleRealized (object sender, EventArgs e)

=== modified file 'Docky/Docky/Interface/DockDragTracker.cs'
--- Docky/Docky/Interface/DockDragTracker.cs    2011-03-10 10:48:09 +0000
+++ Docky/Docky/Interface/DockDragTracker.cs    2011-03-15 07:49:42 +0000
@@ -539,7 +539,7 @@
                EnableDragTo ();
            } else if ((Owner.CursorTracker.Modifier & ModifierType.Button1Mask) == ModifierType.Button1Mask) {
                Gdk.Window bestProxy = BestProxyWindow ();
-               if (proxy_window != bestProxy) {
+               if (bestProxy != null && proxy_window != bestProxy) {
                    proxy_window = bestProxy;
                    Gtk.Drag.DestSetProxy (Owner, proxy_window, DragProtocol.Xdnd, true);
                }
