diff -Nuar elsa.orig/configure.ac elsa/configure.ac
--- elsa.orig/configure.ac	2011-03-09 12:48:08.616980179 +0200
+++ elsa/configure.ac	2011-03-12 16:05:42.944871057 +0200
@@ -30,6 +30,19 @@
 
 
 ### Additional options to configure
+# ConsoleKit support
+AC_ARG_WITH(consolekit, AC_HELP_STRING([--with-consolekit], [Use ConsoleKit]),
+   [USE_CONSOLEKIT=$withval], [USE_CONSOLEKIT=yes])
+if test x"$USE_CONSOLEKIT" != xno; then
+   PKG_CHECK_MODULES(CK_CONNECTOR, ck-connector,
+                             [USE_CONSOLEKIT=yes], [USE_CONSOLEKIT=no])
+   if test x"$USE_CONSOLEKIT" = xyes; then
+       AC_DEFINE([USE_CONSOLEKIT], 1, [Define to 1 to use ConsoleKit])
+       CFLAGS="$XDM_CFLAGS $CK_CONNECTOR_CFLAGS"
+       LIBS="$XDM_LIBS $CK_CONNECTOR_LIBS"
+   fi
+fi
+dnl AM_CONDITIONAL(USE_CONSOLEKIT, test$USE_CONSOLEKIT = xyes)
 
 # Pam
 AC_ARG_ENABLE([pam],
diff -Nuar elsa.orig/.rej elsa/.rej
--- elsa.orig/.rej	1970-01-01 02:00:00.000000000 +0200
+++ elsa/.rej	2011-03-12 16:02:42.650768748 +0200
@@ -0,0 +1,92 @@
+--- configure.ac	2011-03-09 12:48:08.616980179 +0200
++++ configure.ac	2011-03-12 10:55:47.258056005 +0200
+@@ -30,6 +30,19 @@
+ 
+ 
+ ### Additional options to configure
++# ConsoleKit support
++AC_ARG_WITH(consolekit, AC_HELP_STRING([--with-consolekit], [Use ConsoleKit]),
++   [USE_CONSOLEKIT=$withval], [USE_CONSOLEKIT=yes])
++if test x"$USE_CONSOLEKIT" != xno; then
++   PKG_CHECK_MODULES(CK_CONNECTOR, ck-connector,
++                             [USE_CONSOLEKIT=yes], [USE_CONSOLEKIT=no])
++   if test x"$USE_CONSOLEKIT" = xyes; then
++       AC_DEFINE([USE_CONSOLEKIT], 1, [Define to 1 to use ConsoleKit])
++       CFLAGS="$XDM_CFLAGS $CK_CONNECTOR_CFLAGS"
++       LIBS="$XDM_LIBS $CK_CONNECTOR_LIBS"
++   fi
++fi
++dnl AM_CONDITIONAL(USE_CONSOLEKIT, test$USE_CONSOLEKIT = xyes)
+ 
+ # Pam
+ AC_ARG_ENABLE([pam],
+--- elsa_session.c	2011-03-09 12:48:08.611977679 +0200
++++ elsa_session.c	2011-03-12 12:29:45.455649039 +0200
+@@ -8,6 +8,7 @@
+ #include <stdlib.h>
+ #include <sys/types.h>
+ #include <sys/wait.h>
++#include <ck-connector.h>
+ 
+ #include "elsa.h"
+ 
+@@ -102,17 +103,51 @@
+    return EINA_TRUE;
+ }
+ 
++static CkConnector *connector;
++static void
++elsa_consolekit_session_start(){
++    //printf(": CoMaK start\n");
++    connector = ck_connector_new();
++
++    //printf(": CoMaK connector olusturuldu\n");
++    if(connector!=NULL){
++        dbus_bool_t is_local;
++        is_local= 1==1;
++        DBusError error;
++        dbus_error_init (&error);
++        //printf(": CoMaK dbus hata baslatildi\n");
++
++        ck_connector_open_session_with_parameters(
++                                   connector, &error,
++                                   //"unix-user", 1000,
++                                   //"x11-display", "",
++                                   //"x11-display-device", "/dev/tty7",
++                                   //"remote-host-name", "",
++                                   "is-local", &is_local,
++                                   NULL);
++        elsa_pam_env_set("XDG_SESSION_COOKIE", ck_connector_get_cookie(connector));
++        //printf(" CoMaK cookie %s\n",ck_connector_get_cookie(connector));
++
++        }
++   printf(": ENGIN bitti\n");
++
++
++
++}
+ static void
+ _elsa_session_run(struct passwd *pwd, const char *cmd, const char *cookie)
+ {
+ #ifdef HAVE_PAM
+    char **tmp;
+    char buf[PATH_MAX];
++   elsa_consolekit_session_start();
+    pid_t pid;
+    pid = fork();
+    if (pid == 0)
+      {
+         fprintf(stderr, PACKAGE": Session Run\n");
++
++
+         elsa_close_log();
+         env = elsa_pam_env_list_get();
+         elsa_pam_end();
+@@ -137,6 +172,7 @@
+         remove(buf);
+         snprintf(buf, sizeof(buf), "%s > %s/.elsa_session.log 2>&1",
+                  cmd, pwd->pw_dir);
++
+         execle(pwd->pw_shell, pwd->pw_shell, "-c", buf, NULL, env);
+         fprintf(stderr, PACKAGE": The Xsessions are not launched :(\n");
+      }
diff -Nuar elsa.orig/src/daemon/elsa_session.c elsa/src/daemon/elsa_session.c
--- elsa.orig/src/daemon/elsa_session.c	2011-03-09 12:48:08.611977679 +0200
+++ elsa/src/daemon/elsa_session.c	2011-03-12 16:08:50.283493556 +0200
@@ -8,6 +8,7 @@
 #include <stdlib.h>
 #include <sys/types.h>
 #include <sys/wait.h>
+#include <ck-connector.h>
 
 #include "elsa.h"
 
@@ -102,12 +103,40 @@
    return EINA_TRUE;
 }
 
+static CkConnector *connector;
+static void
+elsa_consolekit_session_start(){
+    //printf(": CoMaK start\n");
+    connector = ck_connector_new();
+
+    //printf(": CoMaK connector created\n");
+    if(connector!=NULL){
+        dbus_bool_t is_local;
+        is_local= 1==1;
+        DBusError error;
+        dbus_error_init (&error);
+        //printf(": CoMaK dbus error initialised\n");
+
+        ck_connector_open_session_with_parameters(
+                                   connector, &error,
+                                   //"unix-user", 1000,
+                                   //"x11-display", "",
+                                   //"x11-display-device", "/dev/tty7",
+                                   //"remote-host-name", "",
+                                   "is-local", &is_local,
+                                   NULL);
+        elsa_pam_env_set("XDG_SESSION_COOKIE", ck_connector_get_cookie(connector));
+        //printf(" CoMaK xdg_cookie=%s\n",ck_connector_get_cookie(connector));
+        }
+   //printf(": CoMaK end\n");
+}
 static void
 _elsa_session_run(struct passwd *pwd, const char *cmd, const char *cookie)
 {
 #ifdef HAVE_PAM
    char **tmp;
    char buf[PATH_MAX];
+   elsa_consolekit_session_start();
    pid_t pid;
    pid = fork();
    if (pid == 0)
