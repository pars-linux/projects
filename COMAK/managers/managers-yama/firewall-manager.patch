diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewallmanager/about.py firewall-manager-3.0.0/src//firewallmanager/about.py
--- firewall-manager/src//firewallmanager/about.py	2011-03-12 01:44:44.028000035 +0200
+++ firewall-manager-3.0.0/src//firewallmanager/about.py	2010-12-26 17:47:22.000000000 +0200
@@ -10,32 +10,30 @@
 #
 # Please read the COPYING file.
 #
-import context as ctx
+
+# PyKDE
+from PyKDE4.kdecore import KAboutData, ki18n, ki18nc
 
 PACKAGE = "Firewall Manager"
-appName = "firewall-manager"
-version = "3.0.0"
+
+# Application Data
+appName     = "firewall-manager"
+modName     = "firewallmanager"
+programName = ki18n(PACKAGE)
+version     = "3.0.0"
+description = ki18n(PACKAGE)
+license     = KAboutData.License_GPL
+copyright   = ki18n("(c) 2006-2010 TUBITAK/UEKAE")
+text        = ki18n(None)
 homePage    = "http://developer.pardus.org.tr/projects/firewall-manager"
 bugEmail    = "bugs@pardus.org.tr"
-if ctx.Pds.session == ctx.pds.Kde4:
-    
-    # PyKDE
-    from PyKDE4.kdecore import KAboutData, ki18n, ki18nc
-
-    # Application Data
-    modName     = "firewallmanager"
-    programName = ki18n(PACKAGE)
-    description = ki18n(PACKAGE)
-    license     = KAboutData.License_GPL
-    copyright   = ki18n("(c) 2006-2010 TUBITAK/UEKAE")
-    text        = ki18n(None)
-    catalog     = appName
-    aboutData   = KAboutData(appName, catalog, programName, version, description, license, copyright, text, homePage, bugEmail)
+catalog     = appName
+aboutData   = KAboutData(appName, catalog, programName, version, description, license, copyright, text, homePage, bugEmail)
 
-    # Author(s)
-    aboutData.addAuthor(ki18n("Gökmen Göksel"), ki18n("Current Maintainer"))
-    aboutData.addAuthor(ki18n("Bahadır Kandemir"), ki18n("First Developer"))
-    aboutData.setTranslator(ki18nc("NAME OF TRANSLATORS", "Your names"), ki18nc("EMAIL OF TRANSLATORS", "Your emails"))
+# Author(s)
+aboutData.addAuthor(ki18n("Gökmen Göksel"), ki18n("Current Maintainer"))
+aboutData.addAuthor(ki18n("Bahadır Kandemir"), ki18n("First Developer"))
+aboutData.setTranslator(ki18nc("NAME OF TRANSLATORS", "Your names"), ki18nc("EMAIL OF TRANSLATORS", "Your emails"))
 
-    # Use this if icon name is different than appName
-    aboutData.setProgramIconName("security-high")
+# Use this if icon name is different than appName
+aboutData.setProgramIconName("security-high")
diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewallmanager/config.py firewall-manager-3.0.0/src//firewallmanager/config.py
--- firewall-manager/src//firewallmanager/config.py	2011-03-12 01:44:44.030000035 +0200
+++ firewall-manager-3.0.0/src//firewallmanager/config.py	2010-07-06 14:16:34.000000000 +0300
@@ -11,6 +11,7 @@
 # Please read the COPYING file.
 #
 
+from PyKDE4.kdecore import i18n
 
 # Animation
 ANIM_SHOW, ANIM_HIDE = range(2)
diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewallmanager/context.py firewall-manager-3.0.0/src//firewallmanager/context.py
--- firewall-manager/src//firewallmanager/context.py	2011-03-12 01:44:44.030000035 +0200
+++ firewall-manager-3.0.0/src//firewallmanager/context.py	1970-01-01 02:00:00.000000000 +0200
@@ -1,36 +0,0 @@
-#!/usr/bin/python
-# -*- coding: utf-8 -*-
-
-import pds
-import traceback
-from time import time
-from pds.qiconloader import QIconLoader
-from PyQt4.QtGui import QMessageBox
-from context import *
-
-Pds = pds.Pds('firewall-manager', debug = True)
-# Force to use Default Session for testing
-#Pds.session = pds.DefaultDe
-print 'Current session is : %s %s' % (Pds.session.Name, Pds.session.Version)
-
-i18n = Pds.i18n
-KIconLoader = QIconLoader(Pds)
-KIcon = KIconLoader.icon
-
-time_counter = 0
-start_time = time()
-last_time = time()
-
-def _time():
-    global last_time, time_counter
-    trace = list(traceback.extract_stack())
-    diff = time() - start_time
-    print ('%s ::: %s:%s' % (time_counter, trace[-2][0].split('/')[-1], trace[-2][1])), diff, diff - last_time
-    last_time = diff
-    time_counter += 1
-
-def createMessage(self,errorTitle, errorMessage):
-    errorTitle = i18n(errorTitle)
-    errorMessage= i18n(errorMessage)
-    self.messageBox = QMessageBox(errorTitle, errorMessage, QMessageBox.Critical, QMessageBox.Ok, 0, 0)
-    self.messageBox.show()
diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewallmanager/edit.py firewall-manager-3.0.0/src//firewallmanager/edit.py
--- firewall-manager/src//firewallmanager/edit.py	2011-03-12 01:44:44.031000035 +0200
+++ firewall-manager-3.0.0/src//firewallmanager/edit.py	2010-07-06 14:16:34.000000000 +0300
@@ -15,3 +15,6 @@
 from PyQt4 import QtCore
 from PyQt4 import QtGui
 
+# PyKDE
+from PyKDE4 import kdeui
+from PyKDE4 import kdecore
diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewallmanager/item.py firewall-manager-3.0.0/src//firewallmanager/item.py
--- firewall-manager/src//firewallmanager/item.py	2011-03-12 01:44:44.029000035 +0200
+++ firewall-manager-3.0.0/src//firewallmanager/item.py	2010-07-06 14:16:34.000000000 +0300
@@ -16,7 +16,7 @@
 from PyQt4 import QtGui
 
 # PyKDE
-from context import *
+from PyKDE4.kdeui import KIcon
 
 # UI
 from firewallmanager.ui_item import Ui_ItemWidget
diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewallmanager/main.py firewall-manager-3.0.0/src//firewallmanager/main.py
--- firewall-manager/src//firewallmanager/main.py	2011-03-12 01:44:44.030000035 +0200
+++ firewall-manager-3.0.0/src//firewallmanager/main.py	2010-07-06 14:16:34.000000000 +0300
@@ -14,6 +14,11 @@
 # PyQt
 from PyQt4 import QtCore
 from PyQt4 import QtGui
+
+# PyKDE
+from PyKDE4 import kdeui
+from PyKDE4 import kdecore
+
 # UI
 from firewallmanager.ui_main import Ui_MainWidget
 
@@ -32,9 +37,6 @@
 # Page Dialog
 from firewallmanager.pagedialog import PageDialog
 
-#Context 
-import context as ctx
-from context import *
 
 class MainWidget(QtGui.QWidget, Ui_MainWidget):
     def __init__(self, parent, embed=False):
@@ -91,7 +93,7 @@
             Check if there are packages that provide required backend.
         """
         if not len(self.iface.getPackages()):
-            createMessage(self,"Error","There are no packages that provide backend for this application.\nPlease make sure that packages are installed and configured correctly.")
+            kdeui.KMessageBox.error(self, kdecore.i18n("There are no packages that provide backend for this application.\nPlease make sure that packages are installed and configured correctly."))
             return False
         return True
 
@@ -147,7 +149,7 @@
         type_ = ""
 
         # Build widget and widget item
-        widget = self.makeItemWidget(id_, name, description, type_,KIcon(icon), state)
+        widget = self.makeItemWidget(id_, name, description, type_, kdeui.KIcon(icon), state)
         widgetItem = ItemListWidgetItem(self.listItems, widget)
 
         # Rules are static
@@ -195,7 +197,7 @@
             Builds item filter.
         """
         self.comboFilter.clear()
-        self.comboFilter.addItem(i18n("All"), QtCore.QVariant("all"))
+        self.comboFilter.addItem(kdecore.i18n("All"), QtCore.QVariant("all"))
 
     def buildMenu(self):
         """
@@ -206,7 +208,7 @@
         self.pushNew.setMenu(menu)
 
         # New item
-        action = QtGui.QAction(i18n("Action"), self)
+        action = QtGui.QAction(kdecore.i18n("Action"), self)
         action.setData(QtCore.QVariant("action"))
         menu.addAction(action)
 
@@ -252,9 +254,9 @@
             self.iface.setModuleState(widget.getId(), state == QtCore.Qt.Checked)
         except Exception, e:
             if "Comar.PolicyKit" in e._dbus_error_name:
-                createMessage(self,"Error","Access denied.")
+                kdeui.KMessageBox.error(self, kdecore.i18n("Access denied."))
             else:
-                createMessage(self,"Error", unicode(e))
+                kdeui.KMessageBox.error(self, unicode(e))
             self.buildItemList()
 
     def slotItemEdit(self):
@@ -275,9 +277,9 @@
                 self.iface.setModuleParameters(widget.getId(), dialog.getValues())
             except Exception, e:
                 if "Comar.PolicyKit" in e._dbus_error_name:
-                    createMessage(self,"Error","Access denied.")
+                    kdeui.KMessageBox.error(self, kdecore.i18n("Access denied."))
                 else:
-                    createMessage(self,"Error", unicode(e))
+                    kdeui.KMessageBox.error(self, unicode(e))
 
     def slotItemDelete(self):
         """
@@ -312,9 +314,9 @@
             self.iface.setState(state)
         except Exception, e:
             if "Comar.PolicyKit" in e._dbus_error_name:
-                createMessage(self,"Error", "Access denied.")
+                kdeui.KMessageBox.error(self, kdecore.i18n("Access denied."))
             else:
-                createMessage(self,"Error", unicode(e))
+                kdeui.KMessageBox.error(self, unicode(e))
         self.widgetService.setEnabled(True)
 
     def slotAnimate(self, frame):
diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewallmanager/pagedialog.py firewall-manager-3.0.0/src//firewallmanager/pagedialog.py
--- firewall-manager/src//firewallmanager/pagedialog.py	2011-03-12 01:44:44.028000035 +0200
+++ firewall-manager-3.0.0/src//firewallmanager/pagedialog.py	2010-07-06 14:16:34.000000000 +0300
@@ -15,77 +15,30 @@
 from PyQt4 import QtCore
 from PyQt4 import QtGui
 
+# PyKDE
+from PyKDE4 import kdeui
+from PyKDE4 import kdecore
+
 # Settings item widget
 from firewallmanager.settingsitem import SettingsItemWidget
-#Context
-from context import *
-import context as ctx
-
-# Config
-from firewallmanager.config import ANIM_SHOW, ANIM_HIDE, ANIM_TARGET, ANIM_DEFAULT, ANIM_TIME
-
-
-if ctx.Pds.session == ctx.pds.Kde4:
-
-    # PyKDE
-    from PyKDE4 import kdeui
-    from PyKDE4 import kdecore
-
-    class PageDialog(kdeui.KPageDialog):
-        def __init__(self, parent, parameters, savedParameters):
-            kdeui.KPageDialog.__init__(self, parent)
-
-            self.setFaceType(kdeui.KPageDialog.Tabbed)
-            self.setCaption(kdecore.i18n("Settings"))
-
-
-            self.page_widget = PageWidget(self, parameters, savedParameters)
-            self.page_item = kdeui.KPageWidgetItem(self.page_widget, kdecore.i18n("Settings"))
-
-            self.addPage(self.page_item)
-
-        def getValues(self):
-            return self.page_widget.getValues()
-
-else :
-
-    class PageDialog(QtGui.QDialog):
-        def __init__(self, parent, parameters, savedParameters):
-            self.animationLast = ANIM_HIDE
-            QtGui.QDialog.__init__(self,parent)
-            self.setWindowTitle(i18n("Settings"))
-            self.resize(548,180)
-            self.page_widget = PageWidget(self, parameters,savedParameters)
-            self.tab=QtGui.QTabWidget(self)
-            self.tab.addTab(self.page_widget,i18n("Settings"))
-            self.buttonBox = QtGui.QDialogButtonBox(self)
-            self.buttonBox.setGeometry(QtCore.QRect(4, 152, 540, 25))
-            self.buttonBox.setStandardButtons(QtGui.QDialogButtonBox.Cancel|QtGui.QDialogButtonBox.Ok)
-            self.layout=QtGui.QVBoxLayout(self)
-            self.layout.addWidget(self.tab)
-            self.layout.addWidget(self.buttonBox)
-            self.buttonBox.setObjectName(i18n("buttonBox"))
-            QtCore.QObject.connect(self.buttonBox, QtCore.SIGNAL(i18n("accepted()")), self.accept)
-            QtCore.QObject.connect(self.buttonBox, QtCore.SIGNAL(i18n("rejected()")),self.reject)
-            QtCore.QMetaObject.connectSlotsByName(self)
-
-        def getValues(self):
-            return self.page_widget.getValues()
-
-        def hideEditBox(self):
-            if self.animationLast == ANIM_SHOW:
-                self.animationLast = ANIM_HIDE
-                # Set range
-                self.animator.setFrameRange(self.frameEdit.height(), ANIM_TARGET)
-                # Go go go!
-                self.animator.start()
-
-        def slotCancelEdit(self):
-            self.hideEditBox()
-        
-        def slotSaveEdit(self):
-            # Hide edit box
-            self.hideEditBox()
+
+
+class PageDialog(kdeui.KPageDialog):
+    def __init__(self, parent, parameters, savedParameters):
+        kdeui.KPageDialog.__init__(self, parent)
+
+        self.setFaceType(kdeui.KPageDialog.Tabbed)
+        self.setCaption(kdecore.i18n("Settings"))
+
+
+        self.page_widget = PageWidget(self, parameters, savedParameters)
+        self.page_item = kdeui.KPageWidgetItem(self.page_widget, kdecore.i18n("Settings"))
+
+        self.addPage(self.page_item)
+
+    def getValues(self):
+        return self.page_widget.getValues()
+
 
 class PageWidget(QtGui.QWidget):
     def __init__(self, parent, parameters=[], saved={}):
diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewallmanager/service.py firewall-manager-3.0.0/src//firewallmanager/service.py
--- firewall-manager/src//firewallmanager/service.py	2011-03-12 01:44:44.030000035 +0200
+++ firewall-manager-3.0.0/src//firewallmanager/service.py	2010-07-06 14:16:34.000000000 +0300
@@ -15,8 +15,10 @@
 from PyQt4 import QtCore
 from PyQt4 import QtGui
 
-#Context
-from context import *
+# PyKDE
+from PyKDE4 import kdeui
+from PyKDE4 import kdecore
+
 # UI
 from firewallmanager.ui_service import Ui_ServiceWidget
 
@@ -33,15 +35,15 @@
     def setState(self, state):
         self.state = state
         if state:
-            self.labelStatus.setText(i18n("Firewall is activated."))
-            self.labelIcon.setPixmap(KIcon("document-encrypt").pixmap(48, 48))
-            self.pushToggle.setIcon(KIcon("media-playback-stop"))
-            self.pushToggle.setText(i18n("Stop"))
+            self.labelStatus.setText(kdecore.i18n("Firewall is activated."))
+            self.labelIcon.setPixmap(kdeui.KIcon("document-encrypt").pixmap(48, 48))
+            self.pushToggle.setIcon(kdeui.KIcon("media-playback-stop"))
+            self.pushToggle.setText(kdecore.i18n("Stop"))
         else:
-            self.labelStatus.setText(i18n("Firewall is deactivated."))
-            self.labelIcon.setPixmap(KIcon("document-decrypt").pixmap(48, 48))
-            self.pushToggle.setIcon(KIcon("media-playback-start"))
-            self.pushToggle.setText(i18n("Start"))
+            self.labelStatus.setText(kdecore.i18n("Firewall is deactivated."))
+            self.labelIcon.setPixmap(kdeui.KIcon("document-decrypt").pixmap(48, 48))
+            self.pushToggle.setIcon(kdeui.KIcon("media-playback-start"))
+            self.pushToggle.setText(kdecore.i18n("Start"))
 
     def getState(self):
         return self.state
diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewallmanager/settingsitem.py firewall-manager-3.0.0/src//firewallmanager/settingsitem.py
--- firewall-manager/src//firewallmanager/settingsitem.py	2011-03-12 01:44:44.029000035 +0200
+++ firewall-manager-3.0.0/src//firewallmanager/settingsitem.py	2010-07-06 14:16:34.000000000 +0300
@@ -1,5 +1,3 @@
-#ifndef SETTINGSITEM.PY
-#define SETTINGSITEM.PY
 #!/usr/bin/python
 # -*- coding: utf-8 -*-
 #
@@ -16,8 +14,10 @@
 # PyQt
 from PyQt4 import QtCore
 from PyQt4 import QtGui
-from context import *
-from PyQt4.QtCore import SIGNAL
+
+# PyKDE
+#from PyKDE4.kdeui import KIcon
+
 # UI
 from firewallmanager.ui_settingsitem import Ui_SettingsItemWidget
 
@@ -33,7 +33,7 @@
         self.lineItem.hide()
         self.comboItems.hide()
         self.listItems.hide()
-        self.setDisabledAll()
+
         if type_ == "combo":
             self.comboItems.show()
         elif type_ == "editlist":
@@ -41,99 +41,6 @@
         elif type_ == "text":
             self.lineItem.show()
 
-        self.connect(self.pushAdd, QtCore.SIGNAL("clicked()"), self.addItemToList)
-        self.connect(self.pushDelete, QtCore.SIGNAL("clicked()"), self.removeItemToList)
-        self.connect(self.pushUp, QtCore.SIGNAL("clicked()"), self.funcpushUp)
-        self.connect(self.pushDown, QtCore.SIGNAL("clicked()"), self.funcpushDown)
-        QtCore.QObject.connect(self.listWidget, QtCore.SIGNAL(("currentItemChanged(QListWidgetItem*,QListWidgetItem*)")), self.HideButtons)
-        QtCore.QObject.connect(self.lineEdit, QtCore.SIGNAL(("textChanged(QString)")), self.hideAdd)
-        self.pushAdd.setIcon(KIcon("list-add"))
-        self.pushDelete.setIcon(KIcon("list-remove"))
-        self.pushUp.setIcon(KIcon("arrow-up"))
-        self.pushDown.setIcon(KIcon("arrow-down"))
-
-    def setDisabledAll(self):
-        self.pushAdd.setEnabled(0)
-        self.pushDelete.setEnabled(0)
-        self.pushUp.setEnabled(0)
-        self.pushDown.setEnabled(0)
-
-    def hideAdd(self):
-        if self.lineEdit.text() <> "":
-            self.pushAdd.setEnabled(1)
-        else :
-            self.pushAdd.setEnabled(0)
-
-    def alreadyInList(self):
-        for i in range(self.listWidget.count()):
-            if (self.lineEdit.text()==self.listWidget.item(i).text()):
-                return False 
-        return True
-
-    def addItemToList(self):
-        if (self.alreadyInList()):
-            if self.listWidget.currentItem():
-                self.listWidget.currentItem().setText(self.lineEdit.text())
-            else:
-                if self.lineEdit.text()<> "":
-                    self.listWidget.insertItem(0,self.lineEdit.text())
-        self.lineEdit.setText("")
-        self.listWidget.setCurrentItem(None)
-        self.setDisabledAll()
-
-    def removeItemToList(self):
-        self.listWidget.takeItem(self.listWidget.currentRow())
-        if (self.listWidget.count()==0):
-            self.pushDelete.setEnabled(0)
-        if (self.listWidget.count()<2):
-            self.pushUp.setEnabled(0)
-            self.pushDown.setEnabled(0)
-
-    def listToLineEdit(self):
-        if (self.listWidget.currentItem()):
-            self.lineEdit.setText(self.listWidget.currentItem().text())
-        else:
-            self.lineEdit.setText("")
-
-    def HideButtons(self):
-        self.listToLineEdit()
-        if self.lineEdit.text()<> "":
-            self.pushAdd.setEnabled(1)
-        if self.listWidget.currentRow() == 0 :
-            self.pushUp.setEnabled(0)
-            self.pushDown.setEnabled(1)
-        elif self.listWidget.currentRow() == self.listWidget.count()-1:
-            self.pushUp.setEnabled(1)
-            self.pushDown.setEnabled(0)
-        else:
-            self.pushDown.setEnabled(1)
-            self.pushUp.setEnabled(1)
-        if self.listWidget.currentRow :
-            self.pushDelete.setEnabled(1)
-        if (self.listWidget.count()<2):
-            self.pushUp.setEnabled(0)
-            self.pushDown.setEnabled(0)
-
-    #TODO Create backend file for listWidget 
-    def funcpushDown(self):
-        self.listWidget.setCurrentRow(self.listWidget.currentRow()+1)
-        degisken = self.listWidget.currentItem().text()
-        self.listWidget.setCurrentRow(self.listWidget.currentRow()-1)
-        degisken_ = self.listWidget.currentItem().text()
-        self.listWidget.currentItem().setText(degisken)
-        self.listWidget.setCurrentRow(self.listWidget.currentRow()+1)
-        self.listWidget.currentItem().setText(degisken_)
-        self.listToLineEdit()
-
-    def funcpushUp(self):
-        self.listWidget.setCurrentRow(self.listWidget.currentRow()-1)
-        degisken = self.listWidget.currentItem().text()
-        self.listWidget.setCurrentRow(self.listWidget.currentRow()+1)
-        degisken_ = self.listWidget.currentItem().text()
-        self.listWidget.currentItem().setText(degisken)
-        self.listWidget.setCurrentRow(self.listWidget.currentRow()-1)
-        self.listWidget.currentItem().setText(degisken_)
-        self.listToLineEdit()
     def setTitle(self, title):
         self.labelTitle.setText(unicode(title))
 
@@ -144,7 +51,7 @@
                     name, label = item.split("\t")
                     self.comboItems.addItem(label, QtCore.QVariant(name))
             elif key == "format" and self.type in ["editlist", "text"]:
-                editor = self.lineEdit
+                editor = self.listItems.lineEdit()
                 validator = QtGui.QRegExpValidator(QtCore.QRegExp(value), self)
                 editor.setValidator(validator)
 
@@ -157,7 +64,7 @@
             self.comboItems.setCurrentIndex(index)
         elif self.type == "editlist":
             for item in value.split():
-                self.listWidget.insertItem(0,unicode(item))
+                self.listItems.insertItem(unicode(item))
         elif self.type == "text":
             self.lineItem.setText(unicode(value))
 
@@ -167,9 +74,8 @@
             return unicode(self.comboItems.itemData(index).toString())
         elif self.type == "editlist":
             items = []
-            for index in range(self.listWidget.count()):
-                items.append(unicode(self.listWidget.item(index).text()))
+            for index in range(self.listItems.count()):
+                items.append(unicode(self.listItems.text(index)))
             return " ".join(items)
         elif self.type == "text":
             return unicode(self.lineItem.text())
-#endif // SETTINGSITEM.PY
diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewallmanager/standalone.py firewall-manager-3.0.0/src//firewallmanager/standalone.py
--- firewall-manager/src//firewallmanager/standalone.py	2011-03-12 01:44:44.028000035 +0200
+++ firewall-manager-3.0.0/src//firewallmanager/standalone.py	1970-01-01 02:00:00.000000000 +0200
@@ -1,29 +0,0 @@
-#!/usr/bin/python
-# -*- coding: utf-8 -*-
-
-# PyKDE4 Stuff
-from PyKDE4.kdeui import *
-from PyKDE4.kdecore import KGlobal
-from main import * 
-class FirewallManager(KMainWindow):
-    
-    def __init__(self, parent=None):
-        KMainWindow.__init__(self, parent)
-        self.setWindowIcon(KIcon("security-high"))
-        widget = MainWidget(self)
-        KGlobal.locale().insertCatalog("firewall-manager")
-        self.resize(widget.size())
-        self.setCentralWidget(widget)
-
-class Module(KCModule):
-    def __init__(self, component_data, parent):
-        KCModule.__init__(self, component_data, parent)
-
-        KGlobal.locale().insertCatalog(catalog)
-
-        if not dbus.get_default_main_loop():
-            from dbus.mainloop.qt import DBusQtMainLoop
-            DBusQtMainLoop(set_as_default=True)
-
-        MainWidget(self, embed=True)
-
diff -Nuar '--exclude=*.pyc' firewall-manager/src//firewall-manager.py firewall-manager-3.0.0/src//firewall-manager.py
--- firewall-manager/src//firewall-manager.py	2011-03-12 01:44:44.034000035 +0200
+++ firewall-manager-3.0.0/src//firewall-manager.py	2010-07-06 14:16:34.000000000 +0300
@@ -11,67 +11,52 @@
 # Please read the COPYING file.
 #
 
-#SyStem
-
 import sys
 import dbus
 
-import firewallmanager.context as ctx
-from firewallmanager.context import *
-
-#Qt
-
 from PyQt4 import QtGui
 from PyQt4 import QtCore
-from PyQt4.QtCore import *
-class MainWindow(QtGui.QMainWindow):
+
+from PyKDE4.kdeui import KMainWindow, KApplication, KCModule, KIcon
+from PyKDE4.kdecore import KCmdLineArgs, KGlobal
+
+from firewallmanager.about import aboutData, catalog
+from firewallmanager.main import MainWidget
+
+class MainWindow(KMainWindow):
     def __init__(self, parent=None):
-        QtGui.QMainWindow.__init__(self, parent)
+        KMainWindow.__init__(self, parent)
         widget = MainWidget(self)
         self.resize(widget.size())
         self.setCentralWidget(widget)
-        self.qtrans=QtCore.QTranslator()
+
+
 if __name__ == "__main__":
 
+    KCmdLineArgs.init(sys.argv, aboutData)
+    app = KApplication()
 
     if not dbus.get_default_main_loop():
         from dbus.mainloop.qt import DBusQtMainLoop
         DBusQtMainLoop(set_as_default=True)
 
-    if ctx.Pds.session == ctx.pds.Kde4:
-        
-        #PyKde4
-        from PyKDE4.kdeui import KMainWindow, KApplication, KCModule, KIcon
-        from PyKDE4.kdecore import KCmdLineArgs, KGlobal
-        from firewallmanager.about import aboutData, catalog
-        from firewallmanager.standalone import FirewallManager
-        #Set Commandline arguments
-        KCmdLineArgs.init(sys.argv, aboutData)
-        #Create a Kapplication instance
-        app = KApplication()
-        window = FirewallManager()
-        window.show()
-
-        app.exec_()
-    else:
-
-        import gettext
-        
-        __trans = gettext.translation('firewall-manager', fallback=True)
-        i18n = __trans.ugettext
-
-        from firewallmanager.main import MainWidget
-        from pds.quniqueapp import QUniqueApplication
-
-        app = QUniqueApplication(sys.argv, catalog="firewall-manager")
-
-        mainWindow = MainWidget(None)
-        mainWindow.show()
-        mainWindow.resize(640, 480)
-        mainWindow.setWindowTitle(i18n("Firewall Manager"))
-        mainWindow.setWindowIcon(KIcon("security-high"))
-        app.connect(app, SIGNAL('lastWindowClosed()'), app.quit)
-        app.exec_()
+    window = MainWindow()
+    window.show()
+
+    app.exec_()
+
+
+class Module(KCModule):
+    def __init__(self, component_data, parent):
+        KCModule.__init__(self, component_data, parent)
+
+        KGlobal.locale().insertCatalog(catalog)
+
+        if not dbus.get_default_main_loop():
+            from dbus.mainloop.qt import DBusQtMainLoop
+            DBusQtMainLoop(set_as_default=True)
+
+        MainWidget(self, embed=True)
 
 def CreatePlugin(widget_parent, parent, component_data):
     return Module(component_data, parent)
