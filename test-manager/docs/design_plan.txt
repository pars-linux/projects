Test Manager Tasarım Hedefleri

Bu belge test-manager uygulaması için tasarım hedeflerini tanımlayan bir taslaktır.



test-manager nedir ?

test-manager uygulaması Pardus testçileri için hazırlanmış test süreçlerini mümkün 
olduğunca insan faktöründen bağımsız bir hale getirmek amacı ile tasarlanmaktadır.



0.01 versiyonu için hedefler 

testçiler verilen listeyi yüklediklerinde test için gerekli yönergeler karşılarına gelmeli

Script yazımı tanımlanmalı

Her bir paket için ne yapılacağı testProcess.conf dosyasından okunmalı

test için scriptler indirilmeli


İyileştirme

Test yüklenmeden tuşlara basıldığında uyarı çıksın



Klasör yapısı

/
|
|__ paketAdı/
|           |__testProcess.conf
|           |__read.html
|           |__testScript1.py
|           |__testScript2.py
|           |__...
|           |__testScript[n].py
|
|__...





örnek testProcess.conf yapısı

[General]
script = 2
files = foo.gif,bar.jpg



#TODO

testScript[n].py Dosyaları ile test-manager iletişimi

tesrScript[n].py dosyalarının yapısı

test betikleri "Test()" adında bir sınıf içerirler bu sınıfın "runTests()" metodu önceden tanımlanmış 
testleri çalıştırır. Sınıfın "getResults()" metodu sözlük içeren bir liste döndürür. Her test betiğinin 
Test() sınıfını ve bu sınıfın içindeki runTests ve getResults metodlarını  içermesi zorunludur.

Listenin içerdiği sözlüğün yapısı şöyledir; result = { step:[INTEGER], isSuccessful:[aBOOL] , comment:[aSTRING] }

Bir test betiği için şablon aşağıdaki gibidir;


class Test():
    def __init__(self):
        self.resultList = []

    def test1(self):
        result = {step:1, isSuccessful:False, comment:""}
        #write test code here then set parameters like below
        if foo:
            result['isSuccessful'] = True
        if bar:
            result['comment'] = "foooooooooooo"
        self.resultList.append(result)

    def test2(self):
        result = {step:2, isSuccessful:False, comment:""}
        # write test code here then set parameters below
        if foo:
            result['isSuccessful'] = True
        if bar:
            result['comment'] = "foooooooooooo"
        self.resultList.append(result)

    def runTests(self):
        test1()
        test2()

    def getResults(self):
        return self.resultList



Raporlama

OK işaretlenen her paketi rapora yaz
Fail işaretlenenler için ek bilgi iste
comment girişi
testi bitirme kontrol prosedürü ( düğme menü ??? )
